{"ast":null,"code":"var _jsxFileName = \"/Users/diegosanmartin/Desktop/IE University/IE 2022/Everywhere/profiles/frontend/src/components/login/SignUp.jsx\",\n  _s = $RefreshSig$();\nimport { VStack, ButtonGroup, FormControl, FormLabel, Button, FormErrorMessage, Input, Heading, Text } from '@chakra-ui/react';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { useFormik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useContext, useState } from 'react';\nimport { AccountContext } from '../AccountContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const {\n    setUser\n  } = useContext(AccountContext); // get the setUser function from the AccountContext\n  const navigate = useNavigate();\n  const {\n    error,\n    setError\n  } = useState(null);\n  const formik = useFormik({\n    // formik is a library that helps creating forms\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      // Yup is a library that helps with form validation\n      username: Yup.string().required('Username required!').min(6, \"Username must be at least 6 characters\").max(28, \"Username must be at most 28 characters\"),\n      password: Yup.string().required('Password required!').min(6, \"Password must be at least 6 characters\").max(28, \"Password too long!\")\n    }),\n    onSubmit: (values, actions) => {\n      // when the form is submitted..\n      const vals = {\n        ...values\n      }; // copy the values\n      actions.resetForm(); // reset the form\n      fetch('http://localhost:4000/auth/signup', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(vals) // post vals as a JSON string\n      }).catch(err => {\n        return; // if there is an error, return\n      }).then(res => {\n        if (!res || !res.ok || res.status >= 400) {\n          return; // if there is no response, or the response is not ok, or the status is >= 400, return\n        }\n\n        return res.json(); // if non of the above, return the response as JSON\n      }).then(data => {\n        if (!data) return; // if no data, return\n        console.log(data); // log the data in the browser console\n        setUser({\n          ...data\n        }); // set the user to the data\n        if (data.status) {\n          setError(data.status); // if there is a status, set the error to the status\n        } else if (data.loggedIn) {\n          navigate('/home'); // if the user is logged in, navigate to the home page\n        }\n      });\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    as: \"form\",\n    w: {\n      base: \"90%\",\n      md: \"500px\"\n    },\n    m: \"auto\",\n    justify: \"center\",\n    h: \"100vh\",\n    spacing: \"1rem\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      size: \"2xl\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"red.500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      isInvalid: formik.errors.username && formik.touched.username,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        fontSize: \"lg\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"username\",\n        placeholder: \"Enter Username\",\n        autoComplete: \"off\",\n        size: \"lg\",\n        ...formik.getFieldProps('username')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n        children: formik.errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      isInvalid: formik.errors.password && formik.touched.password,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        fontSize: \"lg\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"password\",\n        placeholder: \"Enter Password\",\n        autoComplete: \"off\",\n        size: \"lg\",\n        type: \"password\",\n        ...formik.getFieldProps('password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      paddingTop: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        colorScheme: \"teal\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => navigate(\"/\"),\n        leftIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 61\n        }, this),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n_s(SignUp, \"JV76WO8xvcAXR09bfDHJi6X898Y=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["VStack","ButtonGroup","FormControl","FormLabel","Button","FormErrorMessage","Input","Heading","Text","ArrowBackIcon","useFormik","useNavigate","Yup","useContext","useState","AccountContext","SignUp","setUser","navigate","error","setError","formik","initialValues","username","password","validationSchema","object","string","required","min","max","onSubmit","values","actions","vals","resetForm","fetch","method","credentials","headers","body","JSON","stringify","catch","err","then","res","ok","status","json","data","console","log","loggedIn","base","md","handleSubmit","errors","touched","getFieldProps"],"sources":["/Users/diegosanmartin/Desktop/IE University/IE 2022/Everywhere/profiles/frontend/src/components/login/SignUp.jsx"],"sourcesContent":["import { VStack, ButtonGroup, FormControl, FormLabel, Button, FormErrorMessage, Input, Heading, Text } from '@chakra-ui/react'\nimport { ArrowBackIcon } from '@chakra-ui/icons'\nimport { useFormik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useContext, useState } from 'react';\nimport { AccountContext } from '../AccountContext';\n\nconst SignUp = () => {\n\n    const {setUser} = useContext(AccountContext); // get the setUser function from the AccountContext\n    const navigate = useNavigate();\n    const { error, setError } = useState(null);\n    const formik = useFormik({ // formik is a library that helps creating forms\n        initialValues: {\n            username: '',\n            password: ''\n        },\n        validationSchema: Yup.object({ // Yup is a library that helps with form validation\n            username: Yup.string().required('Username required!').min(6, \"Username must be at least 6 characters\").max(28, \"Username must be at most 28 characters\"),\n            password: Yup.string().required('Password required!').min(6, \"Password must be at least 6 characters\").max(28, \"Password too long!\")\n        }),\n        onSubmit: (values, actions) => { // when the form is submitted..\n            const vals = {...values} // copy the values\n            actions.resetForm(); // reset the form\n            fetch('http://localhost:4000/auth/signup', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(vals) // post vals as a JSON string\n                }).catch(err => {\n                    return; // if there is an error, return\n                }).then(res => {\n                    if (!res || !res.ok || res.status >= 400) {\n                        return; // if there is no response, or the response is not ok, or the status is >= 400, return\n                    }\n                    return res.json(); // if non of the above, return the response as JSON\n                })\n                .then(data => {\n                    if (!data) return; // if no data, return\n                    console.log(data); // log the data in the browser console\n                    setUser({ ...data}) // set the user to the data\n                    if (data.status) {\n                        setError(data.status); // if there is a status, set the error to the status\n                    } else if (data.loggedIn){\n                        navigate('/home'); // if the user is logged in, navigate to the home page\n                    }\n                })\n        }\n    })\n\n    return <VStack as=\"form\" w={{base: \"90%\", md: \"500px\"}} m=\"auto\" justify=\"center\" h=\"100vh\" spacing=\"1rem\" onSubmit={formik.handleSubmit}>\n        <Heading as=\"h1\" size=\"2xl\">Sign Up</Heading>\n        <Text as=\"p\" color=\"red.500\">{error}</Text>\n        <FormControl isInvalid={formik.errors.username && formik.touched.username}>\n            <FormLabel fontSize=\"lg\">Username</FormLabel>\n            <Input\n              name=\"username\"\n              placeholder=\"Enter Username\"\n              autoComplete=\"off\"\n              size=\"lg\"\n              {...formik.getFieldProps('username')}\n            />\n            <FormErrorMessage>{formik.errors.username}</FormErrorMessage>\n        </FormControl>\n\n        <FormControl isInvalid={formik.errors.password && formik.touched.password}>\n            <FormLabel fontSize=\"lg\">Password</FormLabel>\n            <Input\n              name=\"password\"\n              placeholder=\"Enter Password\"\n              autoComplete=\"off\"\n              size=\"lg\"\n              type=\"password\"\n              {...formik.getFieldProps('password')}\n            />\n            <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\n        </FormControl>\n\n        <ButtonGroup paddingTop=\"1rem\">\n            <Button type=\"submit\" colorScheme=\"teal\">Create Account</Button>\n            <Button onClick={() => navigate(\"/\")} leftIcon={<ArrowBackIcon />}>Back</Button>\n        </ButtonGroup>\n    </VStack>\n}\n\nexport default SignUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}