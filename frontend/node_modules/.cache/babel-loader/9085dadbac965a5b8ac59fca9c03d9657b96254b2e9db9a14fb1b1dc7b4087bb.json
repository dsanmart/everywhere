{"ast":null,"code":"var _jsxFileName = \"/Users/diegosanmartin/Desktop/IE University/IE 2022/Everywhere/profiles/frontend/src/components/AccountContext.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AccountContext = /*#__PURE__*/createContext();\n\n// Keep track of whether logged in or not\nconst UserContext = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState({\n    loggedIn: null\n  });\n  // Function below runs when array changes and when component mounts which will be when the page is refreshed\n  useEffect(() => {\n    fetch(\"http://localhost:4000\", {\n      credentials: \"include\"\n    }).catch(err => {\n      setUser({\n        loggedIn: false\n      });\n      return;\n    }).then(res => {\n      if (!res || !res.ok || res.status >= 400) {\n        setUser({\n          loggedIn: false\n        });\n        return;\n      }\n    }).then(data => {\n      if (!data) {\n        setUser({\n          loggedIn: false\n        });\n        return;\n      }\n      setUser({\n        ...data\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n_s(UserContext, \"1Lw2/oTvx9qUcvRpreraSgsRTXw=\");\n_c = UserContext;\nexport default UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserContext\");","map":{"version":3,"names":["useEffect","createContext","useState","AccountContext","UserContext","children","user","setUser","loggedIn","fetch","credentials","catch","err","then","res","ok","status","data"],"sources":["/Users/diegosanmartin/Desktop/IE University/IE 2022/Everywhere/profiles/frontend/src/components/AccountContext.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\n\n\nexport const AccountContext = createContext();\n\n// Keep track of whether logged in or not\nconst UserContext = ({children}) => {\n    const [user, setUser] = useState({ loggedIn: null });\n    // Function below runs when array changes and when component mounts which will be when the page is refreshed\n    useEffect(() => {\n        fetch(\"http://localhost:4000\", {\n            credentials: \"include\",\n            }).catch(err => {\n                setUser({ loggedIn: false });\n                return;\n            }).then(res => {\n                if (!res || !res.ok || res.status >= 400) {\n                    setUser({ loggedIn: false });\n                    return;\n                }\n            }).then(data => {\n                if (!data) {\n                    setUser({ loggedIn: false });\n                    return;\n                }\n                setUser({...data});\n                })\n    }, []);\n\n    return <AccountContext.Provider value={{user, setUser}}>\n        {children}\n    </AccountContext.Provider>\n}\n\nexport default UserContext;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAGjC,OAAO,MAAMC,cAAc,gBAAGF,aAAa,EAAE;;AAE7C;AACA,MAAMG,WAAW,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC;IAAEM,QAAQ,EAAE;EAAK,CAAC,CAAC;EACpD;EACAR,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,uBAAuB,EAAE;MAC3BC,WAAW,EAAE;IACb,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;MACZL,OAAO,CAAC;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC;MAC5B;IACJ,CAAC,CAAC,CAACK,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,IAAI,CAACA,GAAG,CAACC,EAAE,IAAID,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE;QACtCT,OAAO,CAAC;UAAEC,QAAQ,EAAE;QAAM,CAAC,CAAC;QAC5B;MACJ;IACJ,CAAC,CAAC,CAACK,IAAI,CAACI,IAAI,IAAI;MACZ,IAAI,CAACA,IAAI,EAAE;QACPV,OAAO,CAAC;UAAEC,QAAQ,EAAE;QAAM,CAAC,CAAC;QAC5B;MACJ;MACAD,OAAO,CAAC;QAAC,GAAGU;MAAI,CAAC,CAAC;IAClB,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO,QAAC,cAAc,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACX,IAAI;MAAEC;IAAO,CAAE;IAAA,UAClDF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACa;AAC9B,CAAC;AAAA,GA1BKD,WAAW;AAAA,KAAXA,WAAW;AA4BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}